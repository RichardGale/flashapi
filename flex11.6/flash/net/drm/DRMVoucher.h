#if !defined(FLEX11_6_FLASH_NET_DRM_DRMVOUCHER_AS)
#define FLEX11_6_FLASH_NET_DRM_DRMVOUCHER_AS
#if defined(__cplusplus)


#include "flex11.6.h"
namespace flash
{
    namespace net
    {
        namespace drm
        {
            class DRMPlaybackTimeWindow;
        }
    }
}
namespace flash
{
    namespace utils
    {
        class ByteArray;
    }
}

/**
 * The DRMVoucher class is a handle to the license token that allows a user to view DRM-protected content.
 *
 *   <p class="- topic/p ">The DRMVoucher properties describe the viewing rights conferred by the voucher. You can get a voucher
 * using the <codeph class="+ topic/ph pr-d/codeph ">loadVoucher()</codeph> method of the DRMManager object. This method
 * requires a DRMContentData object, obtained with the <codeph class="+ topic/ph pr-d/codeph ">preloadEmbeddedMetadata()</codeph>
 * method of the NetStream class (AIR only) or by using the <codeph class="+ topic/ph pr-d/codeph ">DRMContentData()</codeph> constructor.
 * When using a media rights server such as Flash Access, you can get a DRMContentData object
 * from the metadata generated by the media packager tool.</p>
 * @langversion 3.0
 * @playerversion   AIR 1.5
 * @playerversion   Flash 10.1
 */

using namespace flash::net::drm;
using namespace flash::utils;

namespace flash
{
    namespace net
    {
        namespace drm
        {
            class DRMVoucher : public Object
            {
                /**
                 * The beginning of this voucher's validity period.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                Date        *voucherStartDate();

                /**
                 * The date on which this voucher expires.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                Date        *voucherEndDate();

                /**
                 * The date and time at which this voucher becomes valid for offline playback.
                 *
                 *   If a voucher is only valid for the current online session,
                 * offlineLeaseStartDate is null.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                Date        *offlineLeaseStartDate();

                /**
                 * The date and time at which this voucher expires for offline playback.
                 *
                 *   If a voucher is only valid for the current online session,
                 * offlineLeaseStartDate is null.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                Date        *offlineLeaseEndDate();

                /**
                 * A dynamic object that reports policies defined by the application.
                 *
                 *   The policy object contains a name-value pair for each policy in effect.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                Object      *policies();

                /**
                 * The time period, after the first viewing, during which
                 * the associated content can be viewed or reviewed.
                 *
                 *   The time period allotted for viewing begins when the user first views the content
                 * and ends after the allotted amount of time has elapsed. If no time is allotted,
                 * the value of the playbackTimeWindow property is null.
                 * @langversion 3.0
                 * @playerversion   AIR 1.5
                 * @playerversion   Flash 10.1
                 */
            public:
                flash::net::drm::DRMPlaybackTimeWindow *playbackTimeWindow();

            public:
                DRMVoucher();

            public:
                ByteArray *toByteArray();
            };
        }
    }
}

#endif // FLEX11_6_FLASH_NET_DRM_DRMVOUCHER_AS
#endif // __cplusplus

